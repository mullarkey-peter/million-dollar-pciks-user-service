version: '3.8'

services:
  # User Service
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_FLYWAY_URL=jdbc:postgresql://user-postgres:5432/userdb
      - SPRING_FLYWAY_USER=postgres
      - SPRING_FLYWAY_PASSWORD=postgres
      # Disable authentication
      - AUTHENTICATION_ENABLED=false
    networks:
      - milliondollarpicks-network
    restart: unless-stopped

  # PostgreSQL Database for User Service
  postgres:
    image: postgres:15-alpine
    container_name: user-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=userdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - milliondollarpicks-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - milliondollarpicks-network
    restart: unless-stopped

volumes:
  postgres-data:

networks:
  milliondollarpicks-network:
    driver: bridge